//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoInge1.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Requerimiento
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Requerimiento()
        {
            this.Cambio = new HashSet<Cambio>();
            this.CriterioAceptacion = new HashSet<CriterioAceptacion>();
        }

        [Required(ErrorMessage = "El id es un campo requerido.")]
        [RegularExpression(@"[0-9a-zA-Z\-_áéíóúñ\s]+", ErrorMessage = "Solo se pueden ingresar letras, números y guiones")]
        [Display(Name = "Id")]
        public string Id { get; set; }

        [Required(ErrorMessage = "El nombre es un campo requerido.")]
        [RegularExpression(@"[0-9a-zA-Z\-_áéíóúñ\s]+", ErrorMessage = "Solo se pueden ingresar letras, números y guiones")]
        [Display(Name = "Nombre")]
        public string Nombre { get; set; }

        [RegularExpression(@"[0-9]+", ErrorMessage = "Solo se pueden ingresar números")]
        [Display(Name = "Prioridad")]
        public string Prioridad { get; set; }

        [RegularExpression(@"[0-9]+", ErrorMessage = "Solo se pueden ingresar números")]
        [Display(Name = "Esfuerzo")]
        public string Esfuerzo { get; set; }

        [Required(ErrorMessage = "El estado es un campo requerido.")]
        [Display(Name = "Estado")]
        public string Estado { get; set; }

        [Required(ErrorMessage = "La descripción es un campo requerido.")]
        [Display(Name = "Descripción")]
        [DataType(DataType.MultilineText)]
        public string Descripcion { get; set; }

        [Display(Name = "Fecha de inicio")]
        [DataType(DataType.Date), DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> FechaInicio { get; set; }

        [Display(Name = "Fecha final")]
        [DataType(DataType.Date), DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> FechaFinal { get; set; }

        [RegularExpression(@"[0-9]+", ErrorMessage = "Solo se pueden ingresar números")]
        [Display(Name = "Sprint")]
        public string Sprint { get; set; }

        [RegularExpression(@"[0-9a-zA-Z\-_áéíóúñ\s]+", ErrorMessage = "Solo se pueden ingresar letras, números y guiones")]
        [Display(Name = "Módulo")]
        public string Modulo { get; set; }

        [DataType(DataType.MultilineText)]
        public string Observaciones { get; set; }

        [Display(Name = "Proyecto")]
        public string IdProyecto { get; set; }

        public byte[] Imagen { get; set; }

        [Display(Name = "Responsable")]
        public string IdResponsable { get; set; }

        [Display(Name = "Solicitante")]
        public string IdSolicitante { get; set; }

        [Display(Name = "Versión")]
        public Nullable<int> Version { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Cambio> Cambio { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CriterioAceptacion> CriterioAceptacion { get; set; }
        public virtual Proyecto Proyecto { get; set; }
        public virtual Usuario Usuario { get; set; }

        internal void agregarCriterios(int c = 1)
        {
            for (int i = 0; i < c; i++)
            {
                CriterioAceptacion.Add(new CriterioAceptacion());
            }
        }
        [Display(Name = "Imagen")]
        public string rutaImagen { get; set; }
        public int cambiosGuardados { get; set; }

        [Display(Name = "Imagen")]
        public string rutaImagenCambio { get; set; }

        [Display(Name = "Solicitante")]
        public string solicitante { get; set; }
        [Display(Name = "Solicitante")]
        public string solicitanteC { get; set; }

        /* Objeto string que corresponde al nombre del responsable del Requerimiento de la base de datos */
        [Display(Name = "Responsable")]
        public string responsable { get; set; }
        [Display(Name = "Responsable")]
        public string responsableC { get; set; }

 
        public string criteriosTexto { get; set; }

        public int accion { get; set; }



    }
}