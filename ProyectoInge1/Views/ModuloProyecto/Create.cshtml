@model ProyectoInge1.Models.ModeloProyecto

@{
    ViewBag.Title = "Agregar proyectos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .required:after {
        content: " *";
        font-weight: bold;
        color: red;
    }
</style>

<script>
    function funcionCancelar() {
        var respuesta = confirm('¿Confirma que desea descartar los cambios en este proyecto?');
        if(respuesta == true){
            var url = '@Url.Action("Create", "ModuloProyecto")';
            window.location.href = url;
        }
    }

</script>

<h2>Agregar proyecto</h2>

@if(ViewBag.msj == "exito") {
    <div style="text-align: right; width: 100%; color:limegreen; font-weight:bold;">
        <p>Proyecto creado exitosamente!</p>
    </div>
} else if(ViewBag.msj == "error") {
    <div style="text-align: right; width: 100%; color:red; font-weight:bold;">
        <p>Error al intentar crear el proyecto</p>
    </div>
}

@using(Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.modeloProyecto.Id, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloProyecto.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloProyecto.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloProyecto.Nombre, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloProyecto.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloProyecto.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloProyecto.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloProyecto.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloProyecto.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Cliente", htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cliente, new SelectList(ViewBag.listaClientes, "Id", "NombreCompleto"), "Seleccione un cliente", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloProyecto.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloProyecto.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloProyecto.FechaInicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloProyecto.FechaFinal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloProyecto.FechaFinal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloProyecto.FechaFinal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloProyecto.Duracion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloProyecto.Duracion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloProyecto.Duracion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloProyecto.Estado, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.modeloProyecto.Estado, new SelectList(
                  new List<Object>{
                       new { value = "Por iniciar" , text = "Por iniciar"  },
                       new { value = "En ejecución" , text = "En ejecución" },
                       new { value = "En pausa" , text = "En pausa" },
                       new { value = "Finalizado" , text = "Finalizado" },
                       new { value = "Cerrado" , text = "Cerrado"}
                    }, "value","text"), "Seleccione un estado", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Líder", htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("lider", new SelectList(ViewBag.listaRecursos, "Id", "NombreCompleto"), "Seleccione un líder", new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-2">&nbsp;</div>
            <div class="form-group col-md-4">
                @Html.Label("Recursos", htmlAttributes: new { @class = "control-label" })
                @Html.ListBox("recursos", new MultiSelectList(ViewBag.listaRecursos, "Id", "NombreCompleto"), new { @class = "form-control" })
                @*@Html.ValidationMessageFor(model => model.cliente, "", new { @class = "text-danger" })*@
            </div>

            <div class="form-horizontal col-md-1">
                <div class="form-group">
                    <button type="button" id="agregar" value="agregar" class="btn btn-success btn-lg">
                        <span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>
                    </button>
                </div>

                <div class="form-group">
                    <button type="button" id="quitar" value="quitar" class="btn btn-warning btn-lg">
                        <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                    </button>
                </div>

            </div>

            <div class="form-group col-md-4">
                @Html.Label("Equipo de desarrolladores", htmlAttributes: new { @class = "control-label required" })
                @Html.ListBox("equipoDesarrollo", new MultiSelectList(ViewBag.listaDesarrolladores, "Id", "NombreCompleto"), new { @class = "form-control" })
                @*Html.ValidationMessageFor(model => model.cliente, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="form-inline" align="right">
                <input type="submit" id="guardar" name="aceptar" value="Aceptar" class="btn btn-default" />
                <a class="btn btn-default" onclick="funcionCancelar()">Cancelar</a>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/UsuariosEnProyectos")
}

