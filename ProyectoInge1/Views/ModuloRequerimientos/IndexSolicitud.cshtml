@model PagedList.IPagedList<ProyectoInge1.Models.Cambio>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Gestion de solicitudes";
    ViewBag.pantallaActual = "solicitudes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script>
        window.onload = function () {
            $('#campodebusqueda').change(function (e) {
                window.location.replace(location.protocol + '//' + location.host + location.pathname + "?Proyecto=" + $(this).val());
            });

        }

</script>


<style>
    form {
        display: inline-block;
    }

    ocultar {
        display: none;
    }
</style>

<h2>Gestion de solicitudes de cambios</h2>

@if (String.Compare(ViewBag.Msj, "exito") == 0)
{
    <div style="text-align: right; width: 100%; color:limegreen; font-weight:bold;">
        <p>El cambio fue modificado exitosamente!</p>
    </div>
}

<div display="inline">
    <form>
        <p>
            Proyecto  &nbsp;
        </p>
    </form>
    <form>
        @using (Html.BeginForm())
            {
            <p>
                @Html.DropDownList("pro", null, "Seleccione un proyecto", htmlAttributes: new { @class = "form-control", @id = "campodebusqueda" })
            </p>
        }
    </form>
    <form>
        <p>
            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
        </p>
    </form>
    <form>
        @using (Html.BeginForm("IndexSolicitud", "ModuloRequerimientos", FormMethod.Get))
            {
            <p>
                Buscar &nbsp; @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, Request.Params["Proyecto"] as string, Request.Params["Categ"] as string)
                <ocultar>
                    @Html.TextBox("Proyecto", Request.Params["Proyecto"] as string)
                </ocultar>
                <ocultar>
                    @Html.TextBox("Categ", Request.Params["Categ"] as string)
                </ocultar>
                <button type="submit" class="btn btn-primary" onsubmit="campodebusqueda();">
                    <span class="glyphicon glyphicon-search"></span>
                </button>
            </p>
        }
    </form>
</div>

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Solicitud", "IndexSolicitud", new { sortOrder = ViewBag.NameSortParm, tipo = "IdSolicitud", currentFilter = ViewBag.CurrentFilter, Proyecto = Request.Params["Proyecto"], Categ = Request.Params["Categ"] as string })
        </th>
        <th>
            @Html.ActionLink("Identificador", "IndexSolicitud", new { sortOrder = ViewBag.NameSortParm, tipo = "Id", currentFilter = ViewBag.CurrentFilter, Proyecto = Request.Params["Proyecto"], Categ = Request.Params["Categ"] as string })
        </th>
        <th>
            @Html.ActionLink("Nombre", "IndexSolicitud", new { sortOrder = ViewBag.NameSortParm, tipo = "Nombre", currentFilter = ViewBag.CurrentFilter, Proyecto = Request.Params["Proyecto"], Categ = Request.Params["Categ"] as string })
        </th>
        <th>
            @Html.ActionLink("Modulo", "IndexSolicitud", new { sortOrder = ViewBag.NameSortParm, tipo = "Modulo", currentFilter = ViewBag.CurrentFilter, Proyecto = Request.Params["Proyecto"], Categ = Request.Params["Categ"] as string })
        </th>
        <th>
            @Html.ActionLink("Sprint", "IndexSolicitud", new { sortOrder = ViewBag.NameSortParm, tipo = "Sprint", currentFilter = ViewBag.CurrentFilter, Proyecto = Request.Params["Proyecto"], Categ = Request.Params["Categ"] as string })
        </th>
        <th>
            @Html.ActionLink("Prioridad", "IndexSolicitud", new { sortOrder = ViewBag.NameSortParm, tipo = "Prioridad", currentFilter = ViewBag.CurrentFilter, Proyecto = Request.Params["Proyecto"], Categ = Request.Params["Categ"] as string })
        </th>
        <th>
            @Html.ActionLink("Esfuerzo", "IndexSolicitud", new { sortOrder = ViewBag.NameSortParm, tipo = "Esfuerzo", currentFilter = ViewBag.CurrentFilter, Proyecto = Request.Params["Proyecto"], Categ = Request.Params["Categ"] as string })
        </th>
        <th>
            @Html.ActionLink("Version del cambio", "IndexSolicitud", new { sortOrder = ViewBag.NameSortParm, tipo = "VersionCambio", currentFilter = ViewBag.CurrentFilter, Proyecto = Request.Params["Proyecto"], Categ = Request.Params["Categ"] as string })
        </th>
        <th>
            @Html.ActionLink("Version final", "IndexSolicitud", new { sortOrder = ViewBag.NameSortParm, tipo = "VersionFinal", currentFilter = ViewBag.CurrentFilter, Proyecto = Request.Params["Proyecto"], Categ = Request.Params["Categ"] as string })
        </th>
        <th>
            @Html.ActionLink("Estado de solicitud", "IndexSolicitud", new { sortOrder = ViewBag.NameSortParm, tipo = "Estado", currentFilter = ViewBag.CurrentFilter, Proyecto = Request.Params["Proyecto"], Categ = Request.Params["Categ"] as string })
        </th>
        <th>
            @Html.ActionLink("Solicitante", "IndexSolicitud", new { sortOrder = ViewBag.NameSortParm, tipo = "Id", currentFilter = ViewBag.CurrentFilter, Proyecto = Request.Params["Proyecto"], Categ = Request.Params["Categ"] as string })
        </th>
        <th>
            @Html.ActionLink("Fecha de solicitud", "IndexHistorialCambios", new { sortOrder = ViewBag.DateSortParm, tipo = "Fecha", currentFilter = ViewBag.CurrentFilter, Requerimiento = Request.Params["Requerimiento"], Proyecto = Request.Params["Proyecto"] })
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
            {
        <tr>
            <td>
               SL-@item.IdSolicitud
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdRequerimiento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Modulo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sprint)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Prioridad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Esfuerzo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Version)
            </td>
            @if (item.VersionCambio != -1)
                {
                <td>
                    @Html.DisplayFor(modelItem => item.VersionCambio)
                </td>
            }
            else
            {
                <td>
                    Sin asignar
                </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.EstadoSolicitud)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SolicitanteCambio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaCambio )
            </td>
            @if (String.Compare(ViewBag.rol, "Modificable") == 0)
            {
                if (String.Compare(item.EstadoSolicitud, "Aprobado") == 0)
                {
                    <td>
                        @Html.ActionLink("Consultar", "MEC_Solicitud", new { idRequerimiento = item.IdRequerimiento, idProyecto = item.IdProyecto, idSolicitud = item.IdSolicitud })

                    </td>
                }
                else
                {
                    <td>
                        @Html.ActionLink("Consultar", "MEC_Solicitud", new { idRequerimiento = item.IdRequerimiento, idProyecto = item.IdProyecto, idSolicitud = item.IdSolicitud })
                        
                        @Html.ActionLink("Evaluar", "Edit", new { idSolicitud = item.IdSolicitud, idRequerimiento = item.IdRequerimiento, idProyecto = item.IdProyecto })
                    </td>
                }
            }
            else
            {
                <td>
                    @Html.ActionLink("Consultar", "MEC_Solicitud", new { idRequerimiento = item.IdRequerimiento, idProyecto = item.IdProyecto, idSolicitud = item.IdSolicitud })

                </td>
            }
        </tr>
    }
</table>
<br />
    Pagina @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("IndexSolicitud", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
