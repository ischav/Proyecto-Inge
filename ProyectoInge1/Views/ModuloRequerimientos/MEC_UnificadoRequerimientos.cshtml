@model ProyectoInge1.Models.ModeloProyecto
@{
    ViewBag.Title = "Detalles de Requerimientos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script>
    function confirmarEliminar(id) {

        var respuesta = confirm('¿Confirma que desea eliminar este requerimiento?');

        if (respuesta == true)
        {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("eliminarRequerimiento")',
                data: 'id=' + id,
                success: function (data) {
                    alert('Requerimiento eliminado exitosamente');
                    var url = '@Url.Action("Index", "ModuloRequerimientos")';
                    window.location.href = url;
                },
                error: function () {
                    alert('El requerimiento no puede ser eliminado, pues se encuentra en ejecución.');
                },
            });
        }
    }

    function habilitarCampos() {
        $("input").prop('disabled', false);
        $('select').prop('disabled', false);
        $("#descripcion *").prop("disabled", false);
        $('.elementoConsultar').hide();
        $('.elementoModificar').show();
        $("#eliminar").prop("disabled",true);
        }

    function funcionCancelar() {
        var respuesta = confirm('¿Confirma que no desea modificar este requerimiento?');
        if (respuesta == true) {
            var url = '@Url.Action("MEC_UnificadoRequerimientos", "ModuloRequerimientos")';
            window.location.href = url;
        }
    }

    window.onload = function () {
        if(@Model.cambiosGuardados == 0){
            $("input").prop('disabled', true).trigger("click");
            $('select').prop('disabled', true).trigger("click");
            $("#descripcion *").prop("disabled", true).trigger("click");
            $('.elementoModificar').hide();
            $('.elementoConsultar').show();
        }
    }

</script>

@if (Model.cambiosGuardados == 0)
{
    <div class="elementoConsultar">
        <h2>Consultar</h2>
    </div>
}
<div class="elementoModificar" style="display:none">
    <h2>Modificar</h2>
</div>

<button type="button" class="btn btn-default" id="modificar" onclick="habilitarCampos()">Modificar</button>
<button type="button" class="btn btn-default" id="eliminar" onclick="confirmarEliminar('@(Model.modeloRequerimiento.Id)')">Eliminar</button>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.modeloRequerimiento.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloRequerimiento.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloRequerimiento.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloRequerimiento.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" , id="descripcion">
            @Html.LabelFor(model => model.modeloRequerimiento.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloRequerimiento.Estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Estado, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloRequerimiento.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloRequerimiento.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloRequerimiento.Prioridad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloRequerimiento.Prioridad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Prioridad, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloRequerimiento.Esfuerzo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloRequerimiento.Esfuerzo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Esfuerzo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloRequerimiento.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloRequerimiento.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.FechaInicio, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloRequerimiento.FechaFinal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloRequerimiento.FechaFinal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.FechaFinal, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloRequerimiento.Modulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloRequerimiento.Modulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Modulo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloRequerimiento.Sprint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloRequerimiento.Sprint, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Sprint, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloRequerimiento.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloRequerimiento.Observaciones, new { htmlAttributes = new { @class = "form-control"/*, placeholder = "Ejemplo: Abcd!123" } */} })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Observaciones, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloRequerimiento.Proyecto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.proyectoRequerimiento, Model.listaProyectos.Select(x => new SelectListItem
           {
               Value = x.Id.ToString(),
               Text = x.Id.ToString()
           }))
            </div>
        </div>

        <div class="form-group">
            <div class="form-inline" align="right">
                <input type="submit" value="Aceptar" name="aceptar" class="btn btn-default" />
                <a class="btn btn-default" onclick="funcionCancelar()">Cancelar</a>
            </div>
        </div>
    </div>
}

<p>
    @Html.ActionLink("Volver a requerimientos", "Index")
</p>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


