@model ProyectoInge1.Models.ModeloProyecto
@{
    ViewBag.Title = "Detalles de Requerimientos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .fileUpload {
        position: relative;
        overflow: hidden;
        margin: 15px;
    }

        .fileUpload input.upload {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            padding: 0;
            font-size: 20px;
            cursor: pointer;
            opacity: 0;
            filter: alpha(opacity=0);
        }

    .row {
        padding-bottom: 1em;
    }

    img {
        width: auto;
        max-width: 279px;
        height: auto;
        max-height: 279px;
    }

    .required:after {
        content: " *";
        font-weight: bold;
        color: red;
    }
</style>

<script>
    var id;
    var idProyecto;

    function confirmarEliminar(id, idProyecto) {

        var respuesta = confirm('¿Confirma que desea eliminar este requerimiento?');

        if (respuesta == true)
        {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("eliminarRequerimiento")',
                data: {'id' : id, 'idProyecto' : idProyecto},
                success: function (data) {
                    alert('Requerimiento eliminado exitosamente!');
                    var url = '@Url.Action("Index", "ModuloRequerimientos")';
                    window.location.href = url;
                },
                error: function () {
                    alert('Sólo puede ser eleminado un requerimiento pendiente de asignar!');
                },
            });
        }
    }

    function habilitarCampos() {
        $("input").prop('disabled', false);
        $('select').prop('disabled', false);
        $("#descripcion *").prop("disabled", false);
        $('.elementoConsultar').hide();
        $('.elementoModificar').show();
        $("#eliminar").prop("disabled",true);
        $('.EstadoModificar').show();
        $('.EstadoConsultar').hide();
        $('.SolicitanteModificar').show();
        $('.SolicitanteConsultar').hide();
        $('.EstadoModificar').show();
        $('.EstadoConsultar').hide();
        $('.ResponsableModificar').show();
        $('.ResponsableConsultar').hide();
        $('#Proyecto').prop('disabled', true).trigger("click");
        $('#Id').prop('disabled', true).trigger("click");
    }

    function funcionCancelar() {
        var respuesta = confirm('¿Confirma que no desea modificar este requerimiento?');
        if (respuesta == true) {
            var url = '@Url.Action("MEC_UnificadoRequerimientos", "ModuloRequerimientos")';
            window.location.href = url;
        }
    }

    window.onload = function () {
        $("input").prop('disabled', true).trigger("click");
        $('select').prop('disabled', true).trigger("click");
        $("#descripcion *").prop("disabled", true).trigger("click");
        $('#Proyecto').prop('disabled', true).trigger("click");
        $('#Id').prop('disabled', true).trigger("click");
        $('.elementoModificar').hide();
        $('.elementoConsultar').show();
        $('.SolicitanteModificar').hide();
        $('.SolicitanteConsultar').show();
        $('.EstadoModificar').hide();
        $('.EstadoConsultar').show();
        $('.ResponsableModificar').hide();
        $('.ResponsableConsultar').show();
    }

    function cambio() {
        var input = document.getElementById("uploadBtn");
        var fReader = new FileReader();
        fReader.readAsDataURL(input.files[0]);
        fReader.onloadend = function (event) {
            var img = document.getElementById("RuPic");
            img.src = event.target.result;
            document.getElementById("rutaImagen").value = event.target.result;
        }
    }
</script>


<div class="elementoConsultar">
    <h2>Consultar</h2>
    @if (Model.cambiosGuardados == 1)
    {
        <div style="text-align: right; width: 100%; color:limegreen; font-weight:bold;">
            <p>Se guardaron los cambios exitosamente!</p>
        </div>
    }
    else if (Model.cambiosGuardados == 2)
    {
        <div style="text-align: right; width: 100%; color:red; font-weight:bold;">
            <p>Ha ocurrido un error al tratar de guardar los cambios!</p>
        </div>
    }
    else if (Model.cambiosGuardados == 3)
    {
        <div style="text-align: right; width: 100%; color:red; font-weight:bold;">
            <p>Sólo puede eliminarse requerimientos pendientes de asignación!</p>
        </div>
    }
</div>

<div class="elementoModificar" style="display:none">
    <h2>Modificar</h2>
    @if (Model.cambiosGuardados == 1)
            {
        <div style="text-align: right; width: 100%; color:limegreen; font-weight:bold;">
            <p>Se guardaron los cambios exitosamente!</p>
        </div>
    }
    else if (Model.cambiosGuardados == 2)
    {
        <div style="text-align: right; width: 100%; color:red; font-weight:bold;">
            <p>Ha ocurrido un error al tratar de guardar los cambios!</p>
        </div>
    }
</div>

<button type="button" class="btn btn-default" id="modificar" onclick="habilitarCampos()">Modificar</button>
<button type="button" class="btn btn-default" id="eliminar" onclick="confirmarEliminar('@(Model.modeloRequerimiento.Id)', '@(Model.modeloRequerimiento.IdProyecto)')">Eliminar</button>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <fieldset>
        <legend>Datos del Requerimiento</legend>
        
        @Html.HiddenFor(model => model.modeloRequerimiento.IdProyecto)
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.modeloRequerimiento.IdProyecto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.IdProyecto, new { htmlAttributes = new { @class = "form-control", @id = "Proyecto" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.IdProyecto, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @Html.HiddenFor(model => model.modeloRequerimiento.Id)
        <div class="row">
            @Html.LabelFor(model => model.modeloRequerimiento.Id, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                <div class="Id">
                    @Html.EditorFor(model => model.modeloRequerimiento.Id, new { htmlAttributes = new { @class = "form-control", @id = "Id" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Id, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.LabelFor(model => model.modeloRequerimiento.Nombre, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="row">
            @Html.LabelFor(model => model.modeloRequerimiento.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Observaciones, new { htmlAttributes = new { @class = "form-control"/*, placeholder = "Ejemplo: Abcd!123" } */} })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Observaciones, "", new { @class = "text-danger" })
            </div>

            <div class="Solicitante">
                <div class="SolicitanteConsultar">
                    @Html.LabelFor(model => model.solicitante, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.solicitante, new { htmlAttributes = new { @class = "form-control"/*, placeholder = "Ejemplo: Abcd!123" } */} })
                        @Html.ValidationMessageFor(model => model.solicitante, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="SolicitanteModificar">
                    @Html.LabelFor(model => model.modeloRequerimiento.IdSolicitante, htmlAttributes: new { @class = "control-label required col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.modeloRequerimiento.IdSolicitante, Model.listaUsuariosCliente.Select(x => new SelectListItem
                   {
                       Value = x.Id.ToString(),
                       Text = x.Nombre.ToString() + " " + x.Apellido1.ToString() + " " + x.Apellido2.ToString()
                        }), "Seleccione un solicitante", new { @class = "form-control" })
                    </div>
                </div>
            </div>      
        </div>

        <div class="row">
            @Html.LabelFor(model => model.rutaImagen, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.rutaImagen, new { htmlAttributes = new { @id = "rutaImagen", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rutaImagen, "", new { @class = "text-danger" })
                <div class="fileUpload btn btn-primary">
                    <span>Cargar</span>
                    <input id="uploadBtn" type="file" class="upload" onchange="cambio()" />
                </div>
            </div>

            @Html.Label("Vista", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4" width="200" height="200">
                <img id="RuPic" src="@(Model.rutaImagen)" />
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.modeloRequerimiento.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>Datos de Estimación</legend>

        <div class="row">
            @Html.LabelFor(model => model.modeloRequerimiento.Prioridad, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Prioridad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Prioridad, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.modeloRequerimiento.Esfuerzo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Esfuerzo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Esfuerzo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            @Html.LabelFor(model => model.modeloRequerimiento.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.FechaInicio, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.modeloRequerimiento.FechaFinal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.FechaFinal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.FechaFinal, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>Datos de Desarrollo</legend>

        <div class="row">
            @Html.LabelFor(model => model.modeloRequerimiento.Estado, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                <div class="EstadoConsultar">
                    @Html.EditorFor(model => model.modeloRequerimiento.Estado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Estado, "", new { @class = "text-danger" })
                </div>
                <div class="EstadoModificar">
                    @Html.DropDownListFor(model => model.modeloRequerimiento.Estado, new SelectList(new List<Object>{
                    new { value = "Pendiente de asignar" , text = "Pendiente de asignar"  },
                    new { value = "Asignado" , text = "Asignado"  },
                    new { value = "En ejecución" , text = "En ejecución" },
                    new { value = "Finalizado" , text = "Finalizado" },
                    new { value = "Cerrado" , text = "Cerrado"}
                }, "value", "text"), "Seleccione un estado", new { @class = "form-control" })
                </div>
            </div>

            <div class="Responsable">
                <div class="ResponsableConsultar">
                    @Html.LabelFor(model => model.responsable, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.responsable, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.responsable, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="ResponsableModificar">
                    @Html.LabelFor(model => model.modeloRequerimiento.IdResponsable, htmlAttributes: new { @class = "control-label required col-md-2" })
                    <div class="col-md-4">
                       @Html.DropDownListFor(model => model.modeloRequerimiento.IdResponsable, Model.listaUsuariosDesarrolladores.Select(x => new SelectListItem
                  {
                      Value = x.Id.ToString(),
                      Text = x.Nombre.ToString() + " " + x.Apellido1.ToString() + " " + x.Apellido2.ToString()
                  }), "Seleccione un proyecto", new { @class = "form-control" })
                    </div>
                </div>
            </div>

        </div>

        <div class="row">

            @Html.LabelFor(model => model.modeloRequerimiento.Sprint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Sprint, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Sprint, "", new { @class = "text-danger" })
            </div>
                
                @Html.LabelFor(model => model.modeloRequerimiento.Modulo, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Modulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Modulo, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <div class="form-group">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-inline" align="right">
            <input type="submit" value="Aceptar" name="aceptar" class="btn btn-default" />
            <a class="btn btn-default" onclick="funcionCancelar()">Cancelar</a>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


