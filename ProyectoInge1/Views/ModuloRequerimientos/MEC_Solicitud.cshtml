@model ProyectoInge1.Models.ModeloProyecto
@{
    ViewBag.Title = "Detalles Solicitud";
    ViewBag.pantallaActual = "solicitudes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .fileUpload {
        position: relative;
        overflow: hidden;
        margin: 15px;
    }

        .fileUpload input.upload {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            padding: 0;
            font-size: 20px;
            cursor: pointer;
            opacity: 0;
            filter: alpha(opacity=0);
        }

    .row {
        padding-bottom: 1em;
    }

    img {
        width: auto;
        max-width: 279px;
        height: auto;
        max-height: 279px;
    }

    .required:after {
        content: " *";
        font-weight: bold;
        color: red;
    }
</style>

<script>
    function habilitarCampos(estado) {
        if(estado == "Pendiente" || estado == "Modificar"){
            $("input").prop('disabled', false);
            $('select').prop('disabled', false);
            $("#descripcion *").prop("disabled", false);
            $("#descripcionCambio *").prop("disabled", false);
            $("#justificacionCambio *").prop("disabled", false);
            $('.elementoConsultar').hide();
            $('.elementoModificar').show();
        }else{
            alertify.error("No se puede modificar una solicitud que ya ha sido evaluada");
        }
    }

    function funcionCancelar() {
        msj = "¿Confirma que no desea modificar esta solicitud?";
        alertify.confirm(msj, function (e) {
            if (e) {
                window.location.reload();
            }
        });
    }

    window.onload = function () {
        if(@Model.cambiosGuardados == 0){
            $("input").prop('disabled', true).trigger("click");
            $('select').prop('disabled', true).trigger("click");
            $("#descripcion *").prop("disabled", true).trigger("click");
            $("#descripcionCambio *").prop("disabled", true).trigger("click");
            $("#justificacionCambio *").prop("disabled", true).trigger("click");
            $('.elementoModificar').hide();
            $('.elementoConsultar').show();
        }
    }

    function confirmarEliminar(estado, idSolicitud, idRequerimiento, idProyecto) {
        if(estado == "Pendiente"){
            msj = "¿Confirma que desea eliminar esta solicitud?"
            alertify.confirm(msj, function(e){
                if(e){
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("eliminarSolicitud")',
                        data: 'idSolicitud=' + idSolicitud + '&idRequerimiento=' + idRequerimiento + '&idProyecto=' + idProyecto,
                        success: function (data) {
                            if(data.success){
                                alertify.success("Solicitud eliminada exitosamente!");
                                var url = '@Url.Action("IndexSolicitud", "ModuloRequerimientos")';
                                window.location.href = url;
                            }else{
                                alertify.error("Error al eliminar la solicitud, intente de nuevo.");
                            }
                        },
                        error: function(){
                            alertify.error("Error al eliminar la solicitud, intente de nuevo.");
                        }
                    });
                }
            });
        }else{
            alertify.error('No se puede eliminar una solicitud que ya ha sido evaluada');
        }
    }

    //Mensajes despues de modificar
    if('@ViewBag.msj'=='exito'){
        alertify.success("Solicitud modificada exitosamente!");
    }else if('@ViewBag.msj'=='error'){
        alertify.error("Error al intentar modificar la solicitud");
    }

</script>


<div class="elementoConsultar">
    <h2>Consultar</h2>
</div>
<div class="elementoModificar" style="display:none">
    <h2>Modificar</h2>
</div>

<div class="elementoConsultar">
    <button type="button" class="btn btn-default" id="modificar" onclick="habilitarCampos('@(Model.modeloCambio.EstadoSolicitud)')">Modificar</button>
    <a class="btn btn-default" id="eliminar" onclick="confirmarEliminar('@(Model.modeloCambio.EstadoSolicitud)', '@(Model.modeloCambio.IdSolicitud)', '@(Model.modeloCambio.IdRequerimiento)', '@(Model.modeloCambio.IdProyecto)')">Eliminar</a>
</div>

@using(Html.BeginForm()) {
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <fieldset>
        <legend>Datos del Requerimiento</legend>

        @Html.HiddenFor(model => model.modeloCambio.IdSolicitud)

        @Html.HiddenFor(model => model.modeloCambio.IdProyecto)
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.modeloCambio.IdProyecto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.IdProyecto, new { htmlAttributes = new { @class = "form-control", @id = "Proyecto", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.IdProyecto, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @Html.HiddenFor(model => model.modeloCambio.IdRequerimiento)
        <div class="row">
            @Html.LabelFor(model => model.modeloCambio.IdRequerimiento, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                <div class="Id">
                    @Html.EditorFor(model => model.modeloCambio.IdRequerimiento, new { htmlAttributes = new { @class = "form-control", @id = "Id", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.IdRequerimiento, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.LabelFor(model => model.modeloCambio.Nombre, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloCambio.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloCambio.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            @Html.LabelFor(model => model.modeloCambio.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloCambio.Observaciones, new { htmlAttributes = new { @class = "form-control"/*, placeholder = "Ejemplo: Abcd!123" } */} })
                @Html.ValidationMessageFor(model => model.modeloCambio.Observaciones, "", new { @class = "text-danger" })
            </div>

            <div class="Solicitante">
                @Html.Label("Solicitante", htmlAttributes: new { @class = "control-label required col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.modeloCambio.IdSolicitante, new SelectList(ViewBag.listaSolicitantes, "Id", "NombreCompleto"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.modeloCambio.IdSolicitante, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            @Html.LabelFor(model => model.rutaImagen, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.rutaImagen, new { htmlAttributes = new { @id = "rutaImagen", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rutaImagen, "", new { @class = "text-danger" })
                <div class="fileUpload btn btn-primary">
                    <span>Cargar</span>
                    <input id="uploadBtn" type="file" class="upload" onchange="cambio()" />
                </div>
            </div>

            @Html.Label("Vista", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4" width="200" height="200">
                <img id="RuPic" src="@(Model.rutaImagen)" />
            </div>
        </div>

        <div class="row">
            <div class="form-group" , id="descripcion">
                @Html.LabelFor(model => model.modeloCambio.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </fieldset>

        <fieldset>
            <legend>Datos de Estimación</legend>

            <div class="row">
                @Html.LabelFor(model => model.modeloCambio.Prioridad, htmlAttributes: new { @class = "control-label required col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.Prioridad, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.Prioridad, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.modeloCambio.Esfuerzo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.Esfuerzo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.Esfuerzo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.modeloCambio.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.FechaInicio, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.modeloCambio.FechaFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.FechaFinal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.FechaFinal, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

        <fieldset>
            <legend>Datos de Desarrollo</legend>

            <div class="row">
                @Html.LabelFor(model => model.modeloCambio.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.Estado, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="Responsable">
                    @Html.Label("Responsable", htmlAttributes: new { @class = "control-label required col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.modeloCambio.IdResponsable, new SelectList(ViewBag.listaResponsables, "Id", "NombreCompleto"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.modeloCambio.IdResponsable, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">

                @Html.LabelFor(model => model.modeloCambio.Sprint, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.Sprint, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.Sprint, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.modeloCambio.Modulo, htmlAttributes: new { @class = "control-label required col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.Modulo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.Modulo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.modeloCambio.Version, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.Version, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.Version, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

    <!--Detalles de solicitud-->
        <fieldset>
            <legend>Detalles de Solicitud</legend>
            <div class="row">
                @Html.Label("Solicitante del cambio", htmlAttributes: new { @class = "control-label required col-md-2" })
                <div class="col-md-4">
                    @Html.HiddenFor(model => model.modeloCambio.SolicitanteCambio)
                    @Html.EditorFor(model => model.solicitanteCambio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.solicitanteCambio, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.modeloCambio.FechaCambio, htmlAttributes: new { @class = "control-label required col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.FechaCambio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.FechaCambio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.modeloCambio.DescripcionCambio, htmlAttributes: new { @class = "control-label required col-md-2" })
                <div class="col-md-4" , id="descripcionCambio">
                    @Html.EditorFor(model => model.modeloCambio.DescripcionCambio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.DescripcionCambio, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.modeloCambio.JustificacionCambio, htmlAttributes: new { @class = "control-label required col-md-2" })
                <div class="col-md-4" , id="justificacionCambio">
                    @Html.EditorFor(model => model.modeloCambio.JustificacionCambio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloCambio.JustificacionCambio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.modeloCambio.EstadoSolicitud, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.EstadoSolicitud, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>

                @Html.LabelFor(model => model.modeloCambio.VersionCambio, htmlAttributes: new { @class = "control-label required col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.VersionCambio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="row">
                <div class="col-md-5" style="border-bottom: 1px solid #A2C2CF;"></div>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.modeloCambio.ObservacionesSolicitud, htmlAttributes: new { @class = "control-label required col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloCambio.ObservacionesSolicitud, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>
        </fieldset>

    <!--Botones-->
        <div class="elementoModificar">
            <div class="form-group">
                <div class="form-inline" align="right">
                    <input type="submit" value="Aceptar" name="aceptar" class="btn btn-default" />
                    <a class="btn btn-default" onclick="funcionCancelar()">Cancelar</a>
                </div>
            </div>
        </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
