@model ProyectoInge1.Models.ModeloProyecto
@{
    ViewBag.Title = "Agregar requerimiento";
    ViewBag.pantallaActual = "requerimientos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .fileUpload {
        position: relative;
        overflow: hidden;
        margin: 15px;
    }

    .fileUpload input.upload {
        position: absolute;
        top: 0;
        right: 0;
        margin: 0;
        padding: 0;
        font-size: 20px;
        cursor: pointer;
        opacity: 0;
        filter: alpha(opacity=0);
    }

    .row{
        padding-bottom: 1em;
    }

    img{
        width: auto;
        max-width: 279px;
        height: auto;
        max-height: 279px;
    }

    data {
        display: none;
    }

    .required:after {
        content: " *";
        font-weight: bold;
        color: red;
    }

</style>

<script>
    function funcionCancelar() {
        var respuesta = confirm('¿Confirma que no desea insertar este requerimiento funcinal?');
        if (respuesta == true) {
            var url = '@Url.Action("Create", "ModuloRequerimientos")';
            window.location.href = url;
        }
    }

    function cambio() {
        var input = document.getElementById("uploadBtn");
        var fReader = new FileReader();
        fReader.readAsDataURL(input.files[0]);
        fReader.onloadend = function (event) {
            var img = document.getElementById("RuPic");
            img.src = event.target.result;
            document.getElementById("rutaImagen").value = event.target.result;
        }
    }
</script>

<h2>Agregar requerimiento</h2>
@if (Model.cambiosGuardados == 1)
            {
    <div style="text-align: right; width: 100%; color:limegreen; font-weight:bold;">
        <p>Se guardaron los cambios exitosamente!</p>
    </div>
}
else if (Model.cambiosGuardados == 2)
{
    <div style="text-align: right; width: 100%; color:red; font-weight:bold;">
        <p>Ha ocurrido un error al tratar de guardar los cambios!</p>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <!-- Atributos de un requerimiento -->

    <fieldset>
        <legend>Datos del Requerimiento</legend>

        @Html.HiddenFor(model => model.modeloRequerimiento.IdProyecto)
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.proyectoRequerimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.proyectoRequerimiento, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                  <data>
                      @Html.EditorFor(model => model.proyectoRequerimiento, new { htmlAttributes = new { @class = "form-control" } })
                  </data>
                    @Html.ValidationMessageFor(model => model.proyectoRequerimiento, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
                @Html.LabelFor(model => model.modeloRequerimiento.Id, htmlAttributes: new { @class = "control-label required col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Id, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.modeloRequerimiento.Nombre, htmlAttributes: new { @class = "control-label required col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Nombre, "", new { @class = "text-danger" })
                </div>
        </div>

        <div class="row">
            @Html.LabelFor(model => model.modeloRequerimiento.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Observaciones, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Observaciones, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.modeloRequerimiento.IdSolicitante, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
               @Html.DropDownListFor(model => model.modeloRequerimiento.IdSolicitante, Model.listaUsuariosCliente.Select(x => new SelectListItem
               {
                   Value = x.Id.ToString(),
                   Text = x.Nombre.ToString() + " " + x.Apellido1.ToString() + " " + x.Apellido2.ToString()
               }), "Seleccione un solicitante", new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            @Html.LabelFor(model => model.rutaImagen, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.rutaImagen, new { htmlAttributes = new { @id = "rutaImagen", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rutaImagen, "", new { @class = "text-danger" })
                <div class="fileUpload btn btn-primary">
                    <span>Cargar</span>
                    <input id="uploadBtn" type="file" class="upload" onchange="cambio()" />
                </div>
            </div>
            
            @Html.Label("Vista", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4" width="200" height="200">
                <img id="RuPic" src="@(Model.rutaImagen)" />
            </div>
        </div>

        <div class="row">
            @Html.LabelFor(model => model.modeloRequerimiento.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Descripcion, new { htmlAttributes = new { @id = "rutaImagen", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>Datos de Estimación</legend>
        <div class="row">
            @Html.LabelFor(model => model.modeloRequerimiento.Prioridad, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Prioridad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Prioridad, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.modeloRequerimiento.Esfuerzo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Esfuerzo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Esfuerzo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            @Html.LabelFor(model => model.modeloRequerimiento.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.FechaInicio, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.modeloRequerimiento.FechaFinal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.FechaFinal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.FechaFinal, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>Datos de Desarrollo</legend>
        <div class="row">
            @Html.LabelFor(model => model.modeloRequerimiento.Estado, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.modeloRequerimiento.Estado, new SelectList(new List<Object>{
                    new { value = "Pendiente de asignar" , text = "Pendiente de asignar"  },
                    new { value = "Asignado" , text = "Asignado"  },
                    new { value = "En ejecución" , text = "En ejecución" },
                    new { value = "Finalizado" , text = "Finalizado" },
                    new { value = "Cerrado" , text = "Cerrado"}
                }, "value", "text"), "Seleccione un estado", new { @class = "form-control" })
            </div>

            @Html.LabelFor(model => model.modeloRequerimiento.IdResponsable, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
               @Html.DropDownListFor(model => model.modeloRequerimiento.IdResponsable, Model.listaUsuariosDesarrolladores.Select(x => new SelectListItem
          {
              Value = x.Id.ToString(),
              Text = x.Nombre.ToString() + " " + x.Apellido1.ToString() + " " + x.Apellido2.ToString()
          }), "Seleccione un responsable", new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
                @Html.LabelFor(model => model.modeloRequerimiento.Sprint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Sprint, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Sprint, "", new { @class = "text-danger" })
            </div>
                
                @Html.LabelFor(model => model.modeloRequerimiento.Modulo, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.Modulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.Modulo, "", new { @class = "text-danger" })
            </div>
        </div>

        @*@Html.HiddenFor(model => model.modeloRequerimiento.Version)*@

    </fieldset>

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })           

        <div class="form-group">
            <div class="form-inline" align="right">
                <input type="submit" value="Aceptar" class="btn btn-default" />
                <a class="btn btn-default" onclick="funcionCancelar()">Cancelar</a>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
