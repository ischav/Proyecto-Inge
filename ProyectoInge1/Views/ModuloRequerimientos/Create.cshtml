@model ProyectoInge1.Models.ModeloProyecto
@{
    ViewBag.Title = "Agregar requerimiento";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    function funcionCancelar() {
        var respuesta = confirm('¿Confirma que no desea insertar este requerimiento funcinal?');
        if (respuesta == true) {
            var url = '@Url.Action("Create", "ModuloRequerimientos")';
            window.location.href = url;
        }
    }
</script>

<h2>Agregar requerimiento</h2>

<p>
    @Html.ActionLink("Volver a consultar requerimientos funcionales", "Index")
</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <!-- Atributos de un requerimiento -->

    <fieldset>
        <legend>Datos del Requerimiento</legend>
        <div class="row">

            <div class="form-group">
                @Html.LabelFor(model => model.modeloRequerimiento.Proyecto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.proyectoRequerimiento, Model.listaProyectos.Select(x => new SelectListItem
               {
                   Value = x.Id.ToString(),
                   Text = x.Nombre.ToString()
               }))
                </div>
            </div>
        </div>
        
        <div class="row">
                @Html.LabelFor(model => model.modeloRequerimiento.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Id, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.modeloRequerimiento.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Nombre, "", new { @class = "text-danger" })
                </div>
        </div>

        <div class="row">
                @Html.LabelFor(model => model.modeloRequerimiento.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.Observaciones, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Observaciones, "", new { @class = "text-danger" })
                </div>

            @Html.Label("Solicitado por", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.modeloRequerimiento.IdSolicitante, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloRequerimiento.IdSolicitante, "", new { @class = "text-danger" })
                @*@Html.DropDownListFor(model => model.cliente, new SelectList(ViewBag.listaClientes, "Id", "NombreCompleto"), "Seleccione un solicitante", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.cliente, "", new { @class = "text-danger" })*@
            </div>
        </div>

    </fieldset>


        <fieldset>
            <legend>Datos de Estimación</legend>
            <div class="row">
                @Html.LabelFor(model => model.modeloRequerimiento.Prioridad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.Prioridad, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Prioridad, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.modeloRequerimiento.Esfuerzo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.Esfuerzo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Esfuerzo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.modeloRequerimiento.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.FechaInicio, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.modeloRequerimiento.FechaFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.FechaFinal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.FechaFinal, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>



        <fieldset>
            <legend>Datos de Desarrollo</legend>
            <div class="row">
                    @Html.LabelFor(model => model.modeloRequerimiento.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.modeloRequerimiento.Estado, new SelectList(new List<Object>{
                       new { value = "Pendiente de asignación" , text = "Pendiente de asignación"  },
                       new { value = "Asignado" , text = "Asignado"  },
                       new { value = "En ejecución" , text = "En ejecución" },
                       new { value = "Finalizado" , text = "Finalizado" },
                       new { value = "Cerrado" , text = "Cerrado"}
                    }, "value", "text"), "Seleccione un estado", new { @class = "form-control" })
                    </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.modeloRequerimiento.Modulo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.Modulo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Modulo, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.modeloRequerimiento.Sprint, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.modeloRequerimiento.Sprint, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.modeloRequerimiento.Sprint, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                    @Html.Label("Responsable", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.modeloRequerimiento.IdResponsable, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.modeloRequerimiento.IdResponsable, "", new { @class = "text-danger" })
                        @* @Html.DropDownList("desarrolladores", new SelectList(ViewBag.listaRecursos, "Id", "NombreCompleto"), "Seleccione un responsable", new { @class = "form-control" })*@
                    </div>
            </div>

    </fieldset>

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })           

                <div class="form-group">
                    <div class="form-inline" align="right">
                        <input type="submit" value="Aceptar" class="btn btn-default" />
                        <a class="btn btn-default" onclick="funcionCancelar()">Cancelar</a>
                    </div>
                </div>
            </div>
            }


            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
