<!-- Vista que despliega la información para agregar un usuario en el sistema -->

@model ProyectoInge1.Models.ModeloIntermedio
@{
    ViewBag.Title = "Agregar usuario";
    ViewBag.pantallaActual = "usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .required:after {
        content: " *";
        font-weight: bold;
        color: red;
    }
</style>

<script>
    /* Método que borra los campos cambiados en la vista Create
     * Requiere: no aplica
     * Modifica: los campos en la vista Create
     * Retorna: el modelo cargado
     */
    function funcionCancelar() {
        msj = "¿Confirma que no desea insertar este usuario?";
        alertify.confirm(msj, function (e) {
            if (e) {
                var url = '@Url.Action("Create", "ModuloUsuarios")';
                window.location.href = url;
            }
        });
    }

    if ('@ViewBag.msj' == 'exito') {
        alertify.success("Usuario creado exitosamente!");
    } else if ('@ViewBag.msj') {
        alertify.error('@ViewBag.msj');
    }
</script>

<h2>Agregar usuario</h2>

<!-- Para cada atributo en la tabla Usuario de la base de datos, se despliega un campo para ingresar el valor de ese
     atributo -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Nombre, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Apellido1, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.Apellido1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.Apellido1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Apellido2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.Apellido2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.Apellido2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Cedula, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.Cedula, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.Cedula, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.FechaNac, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.FechaNac, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.FechaNac, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Telefono1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.Telefono1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.Telefono1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Telefono2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.Telefono2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.Telefono2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modCrear.Email, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modCrear.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modCrear.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modCrear.Password, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modCrear.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Ejemplo: Abcd!123" } })
                @Html.ValidationMessageFor(model => model.modCrear.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modCrear.ConfirmPassword, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modCrear.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modCrear.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.modeloUsuario.Sexo, "F", false)@Html.DisplayName(" Femenino")
                @Html.RadioButtonFor(model => model.modeloUsuario.Sexo, "M", false)@Html.DisplayName(" Masculino")
                @Html.RadioButtonFor(model => model.modeloUsuario.Sexo, "O", false)@Html.DisplayName(" Otro")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modCrear.Rol, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.modCrear.Rol, new SelectList(
                  new List<Object>{
                       new { value = "Administrador" , text = "Administrador"  },
                       new { value = "Desarrollador" , text = "Desarrollador" },
                       new { value = "Usuario Final" , text = "Usuario"}
                    },
                  "value",
                  "text",
                   2))
            </div>
        </div>

        <div class="form-group">
            <div class="form-inline" align="right">
                <input type="submit" value="Aceptar" class="btn btn-default" />
                <a class="btn btn-default" onclick="funcionCancelar()">Cancelar</a>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
