<!-- Vista que despliega la información personal del usuario logeado en el sistema -->

@model ProyectoInge1.Models.ModeloIntermedio
@{
    ViewBag.Title = "Informacion";
    ViewBag.pantallaActual = "miCuenta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .required:after {
        content: " *";
        font-weight: bold;
        color: red;
    }
</style>

<script>
    /* Método que cancela la vista Información
     * Requiere: no aplica
     * Modifica: los campos en la vista Información
     * Retorna: el modelo cargado
     */
    function confirmarSalir() {
        msj = "¿Confirma que no desea modificar los datos de usuario?";
        alertify.confirm(msj, function (e) {
            if (e) {
                var url = '@Url.Action("Informacion", "ModuloUsuarios")';
                window.location.href = url;
            }
        });
    }

    /* Método que esconde el "div" de modificar y muestra el "div" de eliminar en la vista Información
     * Requiere: no aplica
     * Modifica: no aplica
     * Retorna: no aplica
     */
    function esconderModificar() {
        $('.elementoEliminar').show();
        $('.elementoModificar').hide();

    }

    /* Método que borra los campos cambiados en la vista Información
     * Requiere: no aplica
     * Modifica: los campos en la vista Información
     * Retorna: el modelo cargado
     */
    function funcionCancelar() {
        msj = "¿Confirma que no desea modificar los datos de usuario?";
        alertify.confirm(msj, function (e) {
            if (e) {
                window.location.reload();
            }
        });
    }

    function habilitarCampos() {
            $("input").prop('disabled', false);
            $('select').prop('disabled', false);
            $('.elementoEliminar').hide();
            $('.elementoModificar').show();
            $("#eliminar").prop("disabled", true);
    }

    window.onload = function () {
            $("input").prop('disabled', true).trigger("click");
            $('select').prop('disabled', true).trigger("click");
            $('.elementoModificar').hide();
            $('.elementoConsultar').show();
    }

    if ('@ViewBag.msj' == 'exito') {
        alertify.success("Datos modificados exitosamente!");
    } else if ('@ViewBag.msj' == 'error') {
        alertify.error("Error al intentar modificar los datos");
    }

    if ('@ViewBag.StatusMessage') {
        alertify.success('@ViewBag.StatusMessage');
    }
</script>

<h2>Mi cuenta</h2>


<!-- Se imprimen botones para modificar y cambiar la contraseña -->
<div class="elementoEliminar">
    <a class="btn btn-default" onclick="habilitarCampos()">Modificar</a>
    <a class="btn btn-default" onclick="location.href='@Url.Action("Cambio_Contraseña", "Manage")'">Cambiar contraseña</a>
</div>
<div class="elementoModificar">
    <h4> Modificar </h4>
</div>

<!-- Se despliega la información modificable, del elemento seleccionado cuando se va a modificar -->
@using(Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Nombre, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Apellido1, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.Apellido1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.Apellido1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Apellido2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.Apellido2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.Apellido2, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.modeloUsuario.Cedula)
        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.FechaNac, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.FechaNac, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.FechaNac, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Telefono1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.Telefono1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.Telefono1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Telefono2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modeloUsuario.Telefono2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modeloUsuario.Telefono2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modCrear.Email, htmlAttributes: new { @class = "control-label required col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.aspUserEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modCrear.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modeloUsuario.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.modeloUsuario.Sexo, "F", false)@Html.DisplayName("Femenino")
                @Html.RadioButtonFor(model => model.modeloUsuario.Sexo, "M", false)@Html.DisplayName("Masculino")
                @Html.RadioButtonFor(model => model.modeloUsuario.Sexo, "O", false)@Html.DisplayName("Otro")
            </div>
        </div>

        @Html.HiddenFor(model => model.modeloUsuario.Id)
        <div class="elementoModificar">
            <div class="form-group">
                <div class="form-inline" align="right">
                    <input type="submit" value="Aceptar" name="aceptar" class="btn btn-default" />
                    <a class="btn btn-default" onclick="confirmarSalir()">Cancelar</a>
                </div>
            </div>
        </div>
    </div>
}


